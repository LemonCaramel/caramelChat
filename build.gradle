plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.6-SNAPSHOT" apply false
    id "com.modrinth.minotaur" version "2.+"
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    repositories {
        maven { url = "https://maven.parchmentmc.org" } // parchment
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${rootProject.parchment_version}@zip")
        }

        compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.4.1"))
    }

    // Minotaur
    if (project.name == "common") {
        return
    }

    apply plugin: "com.modrinth.minotaur"
    def versions = rootProject.support_versions.split(',').collect { it.trim() }.findAll { it }
    def versionRange = (versions.size() == 1) ? versions[0] : "${versions.first()}-${versions.last()}"

    modrinth {
        token = System.getenv("MODRINTH_TOKEN")
        projectId = "M4vJe1FJ"
        versionName = "[${project.minotaur_platform}] v${rootProject.mod_version} (${versionRange})"
        versionNumber = rootProject.mod_version
        versionType = rootProject.release_channel
        uploadFile = remapJar
        gameVersions = versions
        changelog = rootProject.file("CHANGELOG.md").text
        detectLoaders = false
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"

    base.archivesName = "${rootProject.archives_base_name}-mc${rootProject.minecraft_version}-${project.name}"
    version = rootProject.mod_version
    group = rootProject.maven_group

    tasks.compileJava {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}
